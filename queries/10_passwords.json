{
    "queries": [		
        {
            "name": "Users/Groups with Password reset privileges",
            "category": "10 - Passwords",
            "shortname": "CYPHER_Password_resetters",
            "query": "MATCH p=(m)-[r:ForceChangePassword]->(n:User) RETURN m.name as Object, m.distinguishedname as DN, count(*) as Users ORDER BY Users DESC"
        },
        {
            "name": "Users With 5 Year Old Passwords",
            "category": "10 - Passwords",
            "shortname": "CYPHER_Users_5YrOldPW",
            "query": "WITH timestamp() / 1000 AS date_now MATCH (n:User) WHERE n.enabled = true AND date_now - toInteger(n.pwdlastset) > 315360000 AND n.pwdlastset<>-1.0  AND n.pwdlastset<>0.0 RETURN n.name as Username, n.displayname as DisplayName, n.description as Description, n.enabled as Enabled, n.admincount as AdminCount, n.pwdneverexpires as PassNeverExpire, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon ORDER BY n.pwdlastset"
        },
        {
            "name": "Users With 10 Year Old Passwords",
            "category": "10 - Passwords",
            "shortname": "CYPHER_Users_10YrOldPW",
            "query": "WITH timestamp() / 1000 AS date_now MATCH (n:User) WHERE n.enabled = true AND date_now - toInteger(n.pwdlastset) > 315360000 AND n.pwdlastset<>-1.0  AND n.pwdlastset<>0.0 RETURN n.name as Username, n.displayname as DisplayName, n.description as Description, n.enabled as Enabled, n.admincount as AdminCount, n.pwdneverexpires as PassNeverExpire, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon ORDER BY n.pwdlastset"
        },
        {
            "name": "Users with Userpassword attribute set",
            "category": "10 - Passwords",
            "shortname": "CYPHER_Users_Userpassword",
            "query": "MATCH (u:User) WHERE NOT u.userpassword IS null RETURN u.name as User, u.userpassword as Password, u.enabled as Enabled"
        },
        {
            "name": "Users with Password Not Required attribute set",
            "category": "10 - Passwords",
            "shortname": "CYPHER_Users_PWNeverExpireExcept",
            "query": "MATCH (n:User) WHERE n.pwdneverexpires RETURN n.name as Name,n.displayname as DisplayName,n.enabled as Enabled, n.highvalue as HighValue,  n.description as Description, n.title as Title, n.pwdneverexpires as PWDNeverExpires, n.passwordnotreqd as PWDNotReqd, n.sensitive as Sensitive, n.admincount as AdminCount, n.serviceprincipalnames as SPN, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon"
        },
        {
            "name": "Hunt - Users with Pass or PW in Description",
            "category": "10 - Passwords",
            "shortname": "CYPHER_HuntUsersWithPassInDesc",
            "query": "MATCH (n:User) WHERE n.description  =~ '(?i).*(pass|pw).*' RETURN n.name as Name,n.displayname as DisplayName,n.enabled as Enabled, n.highvalue as HighValue,  n.description as Description, n.title as Title, n.pwdneverexpires as PWDNeverExpires, n.passwordnotreqd as PWDNotReqd, n.sensitive as Sensitive, n.admincount as AdminCount, n.serviceprincipalnames as SPN, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon LIMIT 5000"
        },
        {
            "name": "Hunt - Computers with Pass or PW in Description",
            "category": "10 - Passwords",
            "shortname": "CYPHER_HuntComputersWithPassInDesc",
            "query": "MATCH (n:Computer) WHERE n.description =~ '(?i).*(pass|pw).*' RETURN n.name as Name, n.domain, n.enabled as Enabled,n.haslaps as LAPS, n.highvalue as HighValue,n.operatingsystem as OS,  n.description as Description, toString(datetime({epochSeconds: ToInteger(coalesce(n.pwdlastset,0))})) as PWDLastSet, toString(datetime({epochSeconds: ToInteger(coalesce(n.lastlogon,0))})) as LastLogon,n.serviceprincipalnames as SPN ORDER BY n.highvalue DESC , n.name ASC LIMIT 5000"
        }
	]
}
